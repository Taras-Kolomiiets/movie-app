{"version":3,"sources":["lib/api/getQuery.js","components/MovieItem/actions.js","components/MovieItem/selector.js","components/MovieItem/MovieItem.js","components/MovieItem/index.js","components/MovieItem/MovieItemContainer.js","components/Movies/Movies.js","components/Movies/actions.js","components/Search/Search.js","components/Search/index.js","components/Search/SearchContainer.js","components/Movies/selector.js","components/Movies/index.js","components/Movies/MoviesContainer.js","App.js","redux/reducers/movies.js","redux/reducers/moviesItem.js","redux/store.js","index.js"],"names":["API_KEY","BASE_URL","URL_RATED","getQuery","query","actions","console","log","url","fetch","then","res","json","data","results","GET_MOVIES_ITEM","getMoviesItemActions","type","payload","getMovieSelector","createSelector","state","movies","_","id","filter","movie","Number","MovieItem","moviesItem","className","map","item","src","backdrop_path","alt","title","vote_average","overview","release_date","MovieItemContainer","useParams","dispatch","useDispatch","StateProps","useSelector","handlerGetMoviesItemActions","useCallback","useEffect","connect","el","to","poster_path","GET_MOVIES","Search","search","setQuery","handlerSearch","event","placeholder","value","onChange","target","onClick","SearchContainer","useState","getMoviesActions","preventDefault","getMoviesSelector","MoviesContainer","App","exact","component","Movies","path","initialState","action","configureStore","reducers","middlewares","createStore","combineReducers","compose","applyMiddleware","thunk","logger","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9caf5575.chunk.js","sourcesContent":["const API_KEY = \"9226d2cbb7ed48fe3f3e70d3c7574602\";\nconst BASE_URL = \"https://api.themoviedb.org/\";\nconst URL_RATED = `${BASE_URL}3/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`;\n\nexport const getQuery = (query, actions) => {\n  console.log(actions);\n  let url = null;\n  if (query) {\n    url = `${BASE_URL}3/search/movie?api_key=${API_KEY}&query=${query}`;\n  } else {\n    url = URL_RATED;\n  }\n\n  fetch(url)\n    .then((res) => res.json())\n    .then((data) => {\n      actions(data.results);\n    });\n};\n","export const GET_MOVIES_ITEM = \"GET_MOVIES_ITEM\";\n\nexport const getMoviesItemActions = (data) => {\n  return {\n    type: GET_MOVIES_ITEM,\n    payload: data,\n  };\n};\n","import { createSelector } from 'reselect'\n\nconst getMovies = (state) => state.movies.movies;\n\nconst getId = (_, id) => id;\n\nexport const getMovieSelector = createSelector(\n    getMovies,\n    getId,\n    (movies, id) => movies.filter((movie) => movie.id === Number(id))\n)\n","const urlComponent = \"https://image.tmdb.org/t/p/w342\";\n\nconst MovieItem = ({ moviesItem }) => {\n  return (\n    <div className=\"movie-wrap\">\n      {moviesItem.map((item) => {\n        return (\n          <div key={item.id} className=\"movie-item\">\n            <img\n              src={urlComponent + item.backdrop_path}\n              alt=\"\"\n              className=\"movie-item-img\"\n            />\n            <div className=\"movie-item-wrapper\">\n              <h3 className=\"movie-item-title\">{item.title}</h3>\n              <p className=\"movie-item-stats\">\n                <span className=\"movie-item-description\">Rating: </span>\n                {item.vote_average}\n              </p>\n              <p className=\"movie-item-stats\">\n                <span className=\"movie-item-description\"> Overview: </span>\n                {item.overview}\n              </p>\n              <p className=\"movie-item-stats\">\n                <span className=\"movie-item-description\">Release date: </span>\n                {item.release_date}\n              </p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default MovieItem;\n","import MovieItemContainer from \"./MovieItemContainer\";\n\nexport default MovieItemContainer;\n","import {useCallback, useEffect} from \"react\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport { useParams} from \"react-router-dom\";\nimport {getQuery} from \"../../lib/api/getQuery\";\nimport {getMoviesItemActions} from \"./actions\";\nimport {getMovieSelector} from \"./selector\";\nimport MovieItem from \"./MovieItem\";\n\nconst MovieItemContainer = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n\n    const StateProps = {\n        moviesItem: useSelector((state) => getMovieSelector(state, id)),\n    }\n\n    const handlerGetMoviesItemActions = useCallback(() => {\n        dispatch(getMoviesItemActions)\n    }, [dispatch]);\n\n    useEffect(() => {\n        getQuery('', handlerGetMoviesItemActions)\n    }, [id, handlerGetMoviesItemActions])\n\n    return (\n        <MovieItem {...StateProps} />\n    )\n}\n\nexport default MovieItemContainer;\n","import { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst urlComponent = \"https://image.tmdb.org/t/p/w342\";\n\nconst Movies = ({ movies }) => {\n  return (\n    <>\n      <ul className=\"gallery\">\n        {movies.map((el) => {\n          return (\n            <li className=\"movie\" key={el.id}>\n              <Link to={`/movie/${el.id}`}>\n                <img src={urlComponent + el.poster_path} alt=\"\" />\n                <div className=\"movie-info\">\n                  <h3>{el.title}</h3>\n                  <span>{el.vote_average}</span>\n                </div>\n                <div className=\"overview\">\n                  <h3>Overview:</h3>\n                  {el.overview}\n                </div>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies.movies,\n});\n\nexport default connect(mapStateToProps, null)(Movies);\n","export const GET_MOVIES = 'GET_MOVIES';\n\nexport const getMoviesActions = (data) => {\n    return {\n        type: GET_MOVIES,\n        payload: data,\n    }\n}\n\n","import React, {useCallback} from \"react\";\n\nconst Search = ({search, setQuery, query}) => {\n    const handlerSearch = useCallback((event) => {\n        search(event);\n        setQuery('');\n    }, [search, setQuery])\n\n    return (\n        <form className=\"search-form\">\n            <input\n                className=\"form-input\"\n                type=\"text\"\n                placeholder=\"Search any movie\"\n                value={query}\n                onChange={(event) => setQuery(event.target.value)}\n            />\n            <button\n                onClick={handlerSearch}\n                className=\"btn btn-primary mb-2\"\n            >\n                Search\n            </button>\n        </form>\n    );\n};\n\nexport default Search;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React, {useCallback, useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {getMoviesActions} from \"../Movies/actions\";\nimport {getQuery} from \"../../lib/api/getQuery\";\nimport Search from \"./Search\";\n\nconst SearchContainer = () => {\n    const [query, setQuery] = useState(\"\");\n    const dispatch = useDispatch();\n\n    const handlerGetMoviesItemActions = useCallback((data) => {\n        dispatch(getMoviesActions(data))\n    }, [dispatch]);\n\n    useEffect(() => {\n        getQuery(\"\", handlerGetMoviesItemActions);\n    }, [dispatch, handlerGetMoviesItemActions]);\n\n    const search = (event) => {\n        event.preventDefault();\n        getQuery(query, handlerGetMoviesItemActions);\n    };\n\n    return <Search search={search} setQuery={setQuery} query={query}/>;\n};\n\nexport default SearchContainer;\n","import { createSelector } from 'reselect'\n\nconst getMovies = (state) => state.movies.movies;\n\nexport const getMoviesSelector = createSelector(\n    getMovies,\n    movies => movies\n)\n","import MoviesContainer from \"./MoviesContainer\";\n\nexport default MoviesContainer;\n","import Movies from \"./Movies\";\nimport {useSelector} from \"react-redux\";\nimport Search from \"../Search\";\nimport {getMoviesSelector} from \"./selector\";\n\nconst MovieContainer = () => {\n    const movies = useSelector(getMoviesSelector)\n    return (\n        <>\n            <Search/>\n            <Movies movies={movies}/>\n        </>\n    );\n};\n\nexport default MovieContainer;\n","import * as React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport MovieItem from \"./components/MovieItem\";\nimport Movies from \"./components/Movies\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <header>\n          <nav>\n            <ul>\n              <li>\n                <Link className=\"link btn btn-primary mb-2\" to=\"/movie-app\">\n                  Home\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <div className=\"app\">\n          <Switch>\n            <Route exact component={Movies} path={\"/movie-app\"} />\n            <Route component={MovieItem} path={`/movie/:id`} />\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import { GET_MOVIES } from \"../../components/Movies/actions\";\n\nconst initialState = {\n  movies: [],\n};\n\nconst movies = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MOVIES:\n      return { ...state, movies: action.payload };\n    default:\n      return state;\n  }\n};\nexport default movies;\n","import { GET_MOVIES_ITEM } from \"../../components/MovieItem/actions\";\n\nconst initialState = {\n  moviesItem: [],\n};\n\nconst moviesItem = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_MOVIES_ITEM:\n      return { ...state, moviesItem: action.payload };\n    default:\n      return state;\n  }\n};\nexport default moviesItem;\n","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport { movies, moviesItem } from \"./reducers\";\n\nconst configureStore = (reducers = {}, middlewares = []) =>\n  createStore(\n    combineReducers({ ...reducers, movies, moviesItem }),\n    compose(applyMiddleware(...middlewares, thunk, logger))\n  );\n\nexport default configureStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport configureStore from \"./redux/store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}